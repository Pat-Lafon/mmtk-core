window.SIDEBAR_ITEMS = {"fn":[["dzmmap","Demand-zero mmap: This function mmaps the memory and guarantees to zero all mapped memory. This function WILL overwrite existing memory mapping. The user of this function needs to be aware of this, and use it cautiously."],["dzmmap_noreplace","Demand-zero mmap (no replace): This function mmaps the memory and guarantees to zero all mapped memory. This function will not overwrite existing memory mapping, and it will result Err if there is an existing mapping."],["get_process_memory_maps","Get the memory maps for the process. The returned string is a multi-line string. This is only meant to be used for debugging. For example, log process memory maps after detecting a clash. If we would need to parsable memory maps, I would suggest using a library instead which saves us the trouble to deal with portability."],["handle_mmap_error","Properly handle errors from a mmap Result, including invoking the binding code in the case of an OOM error."],["mmap_fixed",""],["mmap_noreserve","mmap with no swap space reserve: This function does not reserve swap space for this mapping, which means there is no guarantee that writes to the mapping can always be successful. In case of out of physical memory, one may get a segfault for writing to the mapping. We can use this to reserve the address range, and then later overwrites the mapping with dzmmap()."],["mprotect",""],["munmap",""],["munprotect",""],["panic_if_unmapped","Checks if the memory has already been mapped. If not, we panic."],["result_is_mapped",""],["zero",""]]};